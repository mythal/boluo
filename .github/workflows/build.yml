name: Build

on: [push]

jobs:
  cache:
    # https://github.com/cachix/install-nix-action/issues/56#issuecomment-1240991760
    name: "Prepare Nix Cache"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Nix Store
        id: nix-cache
        uses: actions/cache@v3
        with:
          path: /tmp/nixcache
          key: nix-store-${{ runner.os }}-${{ hashFiles('flake.lock', 'flake.nix') }}

      - uses: cachix/install-nix-action@v18

      - name: "Import Nix store cache"
        if: "steps.nix-cache.outputs.cache-hit == 'true'"
        run: "nix-store --import < /tmp/nixcache"

      - name: "Enter nix develop"
        run: "nix develop"

      - name: "Export Nix store cache"
        if: "steps.nix-cache.outputs.cache-hit != 'true'"
        run: "nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > /tmp/nixcache"

  cargo:
    env:
      CI: true
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - "6379:6379"
      postgres:
        image: ghcr.io/mythal/boluo-postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boluo
        ports:
          - "5432:5432"

    steps:
      - uses: actions/checkout@v3

      - name: Cache Nix Store
        id: nix-cache
        uses: actions/cache@v3
        with:
          path: /tmp/nixcache
          key: nix-store-${{ runner.os }}-${{ hashFiles('flake.lock', 'flake.nix') }}

      - uses: cachix/install-nix-action@v18

      - name: "Import Nix store cache"
        if: "steps.nix-cache.outputs.cache-hit == 'true'"
        run: "nix-store --import < /tmp/nixcache"

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: nix develop --command bash -c "cargo build"

      - name: Init Database
        run: nix develop --command bash -c "cargo run -p manage-cli -- init"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/boluo

      - name: Test
        run: nix develop --command bash -c "cargo test -p server"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/boluo
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost/boluo
          SECRET: SOME_SECRET
          REDIS_URL: redis://localhost/
          DEBUG: 1
          PORT: 3000

  node:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Nix Store
        id: nix-cache
        uses: actions/cache@v3
        with:
          path: /tmp/nixcache
          key: nix-store-${{ runner.os }}-${{ hashFiles('flake.lock', 'flake.nix') }}

      - uses: cachix/install-nix-action@v18

      - name: "Import Nix store cache"
        if: "steps.nix-cache.outputs.cache-hit == 'true'"
        run: "nix-store --import < /tmp/nixcache"

      - name: Install
        run: nix develop --command bash -c "pnpm install"

      - name: Check
        run: nix develop --command bash -c "pnpm check"

      - name: Lint
        run: nix develop --command bash -c "pnpm lint"

      - name: Build
        run: nix develop --command bash -c "pnpm build"
        env:
          CI: true

      - name: Upload boluo-legacy artifacts
        uses: actions/upload-artifact@v3
        with:
          name: boluo-legacy
          path: apps/legacy/dist/
