name: Check

on: [push]

jobs:
  workspace:
    name: Node Workspace
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [18]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: npm install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: 'master'

      - name: Build
        run: npm run build:affected
        env:
          CI: true

      - name: Lint
        run: npm run lint:affected

  cargo:
    name: Cargo Workspace
    env:
      CI: true
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - '6379:6379'
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boluo
        ports:
          - '5432:5432'

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build

      - name: Clippy
        run: cargo clippy

      - name: Initialize database
        run: cargo run -p server -- --init
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/boluo
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost/boluo

      - name: Test
        run: cargo test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/boluo
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost/boluo
          SECRET: SOME_SECRET
          REDIS_URL: redis://localhost/
          DEBUG: 1
          PORT: 3000

  prettier:
    name: Style (Prettier)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
          # This is important to fetch the changes to the previous commit
          fetch-depth: 0

      - name: Prettier Check
        uses: creyD/prettier_action@v4.3
        with:
          dry: True

  cargo-fmt:
    name: Style (Rust)
    runs-on: ubuntu-latest
    container: rust:slim
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --all --check
