name: Build Images
on:
  push:
    branches:
      - production
      - master
jobs:
  images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - legacy
          - server
          - spa
          - site

    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - uses: ./.github/actions/image-tag
        id: image-tag

      # https://github.com/DeterminateSystems/nix-installer-action
      - uses: DeterminateSystems/nix-installer-action@78d714f6f717f43be9f3f5b867a2ce6ab84db093
        with:
          extra-conf: |
            experimental-features = flakes nix-command ca-derivations

      # https://github.com/cachix/cachix-action
      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad
        with:
          name: boluo
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        run: nix build ".#${{ matrix.package }}-image"

      - name: Push docker image to the registry
        run: |
          docker load < result
          docker tag boluo-${{ matrix.package }}:latest ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ steps.image-tag.outputs.tag }}
          docker push ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ steps.image-tag.outputs.tag }}
  deploy-staging:
    runs-on: ubuntu-latest
    needs: images
    steps:
      - name: Check out the repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # https://github.com/DeterminateSystems/nix-installer-action
      - uses: DeterminateSystems/nix-installer-action@78d714f6f717f43be9f3f5b867a2ce6ab84db093
        with:
          extra-conf: |
            experimental-features = flakes nix-command ca-derivations

      - run: nix --accept-flake-config --log-format raw -L run .#deploy-server-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_IO_DEVELOPMENT_TOKEN }}
